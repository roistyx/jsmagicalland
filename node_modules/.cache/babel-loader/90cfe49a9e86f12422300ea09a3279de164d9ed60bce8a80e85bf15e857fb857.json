{"ast":null,"code":"import React, { useState } from \"react\";\nimport { Center, Rows } from \"../layouts/Line\";\nimport { Box } from \"../layouts/Box\";\nimport \"./Callback.css\";\nfunction outerFunction(outerVariable) {\n  return function innerFunction(innerVariable) {\n    console.log(\"Outer Variable: \" + outerVariable);\n    console.log(\"Inner Variable: \" + innerVariable);\n  };\n}\nconst newFunction = outerFunction(\"outside\");\nnewFunction(\"inside\");\n\n// function Closures() {\n//   const [userLeft, setUserLeft] = useState(false);\n\n//   const [userWatchingCatMeme, setUserWatchingCatMeme] = useState(false);\n\n//   const handleUserLeftChange = () => {\n//     setUserLeft(!userLeft);\n//   };\n\n//   const handleUserWatchingCatMemeChange = () => {\n//     setUserWatchingCatMeme(!userWatchingCatMeme);\n//   };\n\n//   const textAreaView = (\n//     <div>\n//       <textarea\n//         id=\"w3review\"\n//         name=\"w3review\"\n//         rows=\"25\"\n//         cols=\"56\"\n//         defaultValue={code}\n//       />\n//     </div>\n//   );\n\n//   function watchTutorialCallback(callback, errorCallback) {\n//     if (userLeft) {\n//       errorCallback({\n//         name: \"User Left\",\n//         message: \":(\",\n//       });\n//     } else if (userWatchingCatMeme) {\n//       errorCallback({\n//         name: \"User Watching Cat Meme\",\n//         message: \"WebDevSimplified < Cat\",\n//       });\n//     } else {\n//       callback(\"Thumbs up and Subscribe\");\n//     }\n//   }\n\n//   watchTutorialCallback(\n//     (the_message) => {\n//       console.log(\"Success\" + the_message);\n//     },\n//     (error) => {\n//       console.log(error.name + \", \" + error.message);\n//     }\n//   );\n//   return (\n//     <div>\n//       <Center>\n//         <div className=\"box\">\n//           <div className=\"error\"> {userLeft ? \"User left\" : \"\"} </div>\n//           <div className=\"error\">\n//             {userWatchingCatMeme ? \"User is watching cat meme\" : \"\"}\n//           </div>\n//           <div>\n//             {!userLeft && !userWatchingCatMeme ? \"User is still here\" : \"\"}\n//           </div>\n//         </div>\n//       </Center>\n//       <Center>\n//         <Rows>\n//           <Box>\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={userLeft}\n//                 onChange={handleUserLeftChange}\n//               />\n//               Did user leave?\n//             </label>\n\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={userWatchingCatMeme}\n//                 onChange={handleUserWatchingCatMemeChange}\n//               />\n//               Is user watching a cat meme?\n//             </label>\n//           </Box>\n//         </Rows>\n//       </Center>\n//       <Center>\n//         <Box>{textAreaView}</Box>\n//       </Center>\n//     </div>\n//   );\n// }\n\n// export default Closures;","map":{"version":3,"names":["React","useState","Center","Rows","Box","outerFunction","outerVariable","innerFunction","innerVariable","console","log","newFunction"],"sources":["/Users/roieab/Library/Mobile Documents/com~apple~CloudDocs/Git/javascript-heaven/src/pages/Closures.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Center, Rows } from \"../layouts/Line\";\nimport { Box } from \"../layouts/Box\";\nimport \"./Callback.css\";\n\nfunction outerFunction(outerVariable) {\n  return function innerFunction(innerVariable) {\n    console.log(\"Outer Variable: \" + outerVariable);\n    console.log(\"Inner Variable: \" + innerVariable);\n  };\n}\n\nconst newFunction = outerFunction(\"outside\");\nnewFunction(\"inside\");\n\n// function Closures() {\n//   const [userLeft, setUserLeft] = useState(false);\n\n//   const [userWatchingCatMeme, setUserWatchingCatMeme] = useState(false);\n\n//   const handleUserLeftChange = () => {\n//     setUserLeft(!userLeft);\n//   };\n\n//   const handleUserWatchingCatMemeChange = () => {\n//     setUserWatchingCatMeme(!userWatchingCatMeme);\n//   };\n\n//   const textAreaView = (\n//     <div>\n//       <textarea\n//         id=\"w3review\"\n//         name=\"w3review\"\n//         rows=\"25\"\n//         cols=\"56\"\n//         defaultValue={code}\n//       />\n//     </div>\n//   );\n\n//   function watchTutorialCallback(callback, errorCallback) {\n//     if (userLeft) {\n//       errorCallback({\n//         name: \"User Left\",\n//         message: \":(\",\n//       });\n//     } else if (userWatchingCatMeme) {\n//       errorCallback({\n//         name: \"User Watching Cat Meme\",\n//         message: \"WebDevSimplified < Cat\",\n//       });\n//     } else {\n//       callback(\"Thumbs up and Subscribe\");\n//     }\n//   }\n\n//   watchTutorialCallback(\n//     (the_message) => {\n//       console.log(\"Success\" + the_message);\n//     },\n//     (error) => {\n//       console.log(error.name + \", \" + error.message);\n//     }\n//   );\n//   return (\n//     <div>\n//       <Center>\n//         <div className=\"box\">\n//           <div className=\"error\"> {userLeft ? \"User left\" : \"\"} </div>\n//           <div className=\"error\">\n//             {userWatchingCatMeme ? \"User is watching cat meme\" : \"\"}\n//           </div>\n//           <div>\n//             {!userLeft && !userWatchingCatMeme ? \"User is still here\" : \"\"}\n//           </div>\n//         </div>\n//       </Center>\n//       <Center>\n//         <Rows>\n//           <Box>\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={userLeft}\n//                 onChange={handleUserLeftChange}\n//               />\n//               Did user leave?\n//             </label>\n\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={userWatchingCatMeme}\n//                 onChange={handleUserWatchingCatMemeChange}\n//               />\n//               Is user watching a cat meme?\n//             </label>\n//           </Box>\n//         </Rows>\n//       </Center>\n//       <Center>\n//         <Box>{textAreaView}</Box>\n//       </Center>\n//     </div>\n//   );\n// }\n\n// export default Closures;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAO,gBAAgB;AAEvB,SAASC,aAAaA,CAACC,aAAa,EAAE;EACpC,OAAO,SAASC,aAAaA,CAACC,aAAa,EAAE;IAC3CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGJ,aAAa,CAAC;IAC/CG,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGF,aAAa,CAAC;EACjD,CAAC;AACH;AAEA,MAAMG,WAAW,GAAGN,aAAa,CAAC,SAAS,CAAC;AAC5CM,WAAW,CAAC,QAAQ,CAAC;;AAErB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}